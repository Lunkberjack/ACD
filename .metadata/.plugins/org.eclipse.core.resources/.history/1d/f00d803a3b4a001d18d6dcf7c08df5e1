package main;

import org.w3c.dom.Document;
import org.w3c.dom.Element;

import java.io.File;
import java.io.OutputStream;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.OutputKeys;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerConfigurationException;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;

public class TratamientoXML {

	public static void main(String[] args) {
		DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
		DocumentBuilder db;

		try {
			db = dbf.newDocumentBuilder();
			Document doc = db.newDocument();
			Element raiz = doc.createElement("libreria");
			doc.appendChild(raiz);
			Element nombre = doc.createElement("nombre");
			nombre.setTextContent("Librería Pepe");
			raiz.appendChild(nombre);
			Element libros = doc.createElement("libros");
			raiz.appendChild(libros);
			Element libro1 = TratamientoXML.crearLibro(doc, "1234567890", "Don Quijote de la Mancha", "Miguel de Cervantes");
			libros.appendChild(libro1);
			Element libro2 = TratamientoXML.crearLibro(doc, "2345678901", "Lazarillo de Tormes", "Anónimo");
			libros.appendChild(libro2);
			Element libro3 = TratamientoXML.crearLibro(doc, "4567890123", "La vida es sueño", "Pedro Calderón de la Barca");
			libros.appendChild(libro3);
			// 4. Añadir un nuevo libro
			Element libro4 = TratamientoXML.crearLibro(doc, "890123457", "Cien años de soledad", "Gabriel García Márquez");
			libros.appendChild(libro4);
			// 2, Recorrer y mostrar
			TratamientoXML.recorrerMostrar(doc, System.out);
			// 3. Crear un archivo XML a partir del DOM
			TratamientoXML.crearXMLAPartirDOC(doc);
		} catch (ParserConfigurationException e) {
			e.printStackTrace();
		} catch (TransformerException e) {
			e.printStackTrace();
		}
	}

	/**
	 * Crea un elemento para el doc.
	 * @param doc
	 * @param isbn
	 * @param autor
	 * @param titulo
	 * @return
	 */
	private static Element crearLibro(Document doc, String isbn, String tit, String aut) {
		Element lib = doc.createElement("libro");
		lib.setAttribute("isbn", isbn);

		Element autor = doc.createElement("autor");
		autor.setTextContent(aut);
		lib.appendChild(autor);

		Element titulo = doc.createElement("titulo");
		titulo.setTextContent(tit);
		lib.appendChild(titulo);

		return lib;
	}

	/**
	 * 2. Recorre el documento y muestra su contenido.
	 * @param doc
	 * @param os
	 * @throws TransformerException
	 */
	private static void recorrerMostrar(Document doc, OutputStream os) throws TransformerException {
		TransformerFactory transformerFactory = TransformerFactory.newInstance();
		Transformer transformer = transformerFactory.newTransformer();
		DOMSource source = new DOMSource(doc);
		StreamResult result = new StreamResult(os);
		// Pa poner bonita la salida
		transformer.setOutputProperty(OutputKeys.INDENT, "yes");
		transformer.setOutputProperty(OutputKeys.ENCODING, "UTF-8");
		// Muestra el documento
		transformer.transform(source, result);
	}
	/**
	 * Crea un archivo XML en el escritorio a partir del árbol DOM.
	 * @param doc
	 * @throws TransformerException
	 */
	private static void crearXMLAPartirDOC(Document doc) throws TransformerException {
		File f = new File("/home/lucia/Escritorio/TratamientoXML.xml"); 
		TransformerFactory transformerFactory = TransformerFactory.newInstance();
		Transformer transformer = transformerFactory.newTransformer();
		// Formato salida
		transformer.setOutputProperty(OutputKeys.INDENT, "yes");
		transformer.setOutputProperty(OutputKeys.ENCODING, "UTF-8");
		// Creamos un StreamResult, intermediario entre el Transformer y el File de destino.
		StreamResult result = new StreamResult(f);
		// Creamos un DOMSource, intermediario entre el Transformer y el árbol.
		DOMSource source = new DOMSource(doc);
		// Transformamos el DOM a archivo XML.
		transformer.transform(source, result);
	}
}
